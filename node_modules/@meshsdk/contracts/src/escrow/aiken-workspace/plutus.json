{
  "preamble": {
    "title": "meshjs/escrow",
    "description": "Aiken contracts for project 'meshjs/escrow'",
    "version": "0.0.0",
    "plutusVersion": "v2",
    "compiler": {
      "name": "Aiken",
      "version": "v1.0.24-alpha+982eff4"
    },
    "license": "Apache-2.0"
  },
  "validators": [
    {
      "title": "escrow.escrow",
      "datum": {
        "title": "datum",
        "schema": {
          "$ref": "#/definitions/escrow~1types~1EscrowDatum"
        }
      },
      "redeemer": {
        "title": "redeemer",
        "schema": {
          "$ref": "#/definitions/escrow~1types~1EscrowRedeemer"
        }
      },
      "compiledCode": "590b40010000323232323232323232222323232323232533300c3232323232323232323232323232533301a3370e90010008991919191919191919191919191919299981499b8748000c0a00044c8c8c8c94ccc0b4cdc3a400000226464646464646464a6660706076006264a6660726078006264a66606e66e1d200430360011323232533303a3370e9002181c80089919299981e19b8748000c0ec0104c8c8c8c94ccc10cc1180084c8c8c8c8c94ccc1140084004528198189bab3036304200f330303756606c6084606c608402002866ebc020cdd2a40046608e00c6608e6e98010cc11c054cc11cdd3009a5eb80c0e401ccc0e40088c8c8cc0f00048c8dd698240011bae30460013756608a0046eb8c10c004c0e400c58dd5982200098220011821000981d0020b1820000981c0008b1813981b802181e800981a8008b1812181a1814181a0010b181d0010b181c8011bac30350023758606600266ec0dd39981080a0031ba7330200110063756606a002606a004606600260560522a66605a66e1d2002001132323232533303430370031533303400213253330323370e90021818800899191919299981b19b87480000044cc08403cc080c0ecc0d000c4c8c8c8c8c8c8c8c8c8c8c8c8c94ccc10d4ccc10c004400c52808010a5032323300100100222533304800114a026464a66608e6606404000429444cc010010004c130008dd71825000998231ba9302c00b330463752605800e97ae03302e0020043302d0020073302801f0043302701e007375660840026084004608000260800046eacc0f8004c0f8008c0f0004c0d000cc0d0008c0ac004c0e0004c0c000458c07cc0bcc08cc0bc0045858c0d4008dd618188011bac302f001337606e9ccc074040008dd39980e006801099191919299981a181b8018a99981a001099299981919b8748010c0c40044c8c94ccc0d0cdc3a4004606600226464646464646464a66607e60840042646464646464646464a66608aa66608a0022006294040085281919198008008011129998250008a511323253330493303402200213300400400114a0609c0046eb8c130004cc120dd49817007998241ba9302e00b4bd70198180010061981780100399815010804198148100059981b802119191981d0009191bad3046002375c60880026eacc10c008dd71820800981b8029981a803119191981c0009191bad3044002375c60840026eacc104008dd7181f800981a8038b1bab30400013040002303e001303e002375660780026078004607400260640022c607000260600022c603e605e6046605e0022c2c606a0046eb0c0c4008dd6181780099bb0374e6603a0200046e9ccc070034008c0ac0a0c070c0a4c074c0a4004c0bc004c09c00458c8cc004004030894ccc0b4004530103d87a800013232533302c3375e603a6054004022266e952000330300024bd70099802002000981880118178009bac302c001302c001302b001302a0013029001302800130270023758604a002604a00260480046eb0c088004c068c034c06805cc080004c060008528180c0009805180b00991191980080080191299980f0008a5eb7bdb1804cc894ccc074cdd79807180d8010028998048009bab300f301b0021001302000133002002302100123253330183370e9000180b80089bae301d3016001163008301500122323300100100322533301c00114a026464a66603666e3c00801452889980200200098100011bae301e0012232333001001003002222533301c0021001132333004004302000333223233001001005225333021001133022337606ea4010dd3001a5eb7bdb1804c8c8c8c94ccc088cdd79980a804001260103d8798000133026337606ea4020dd30038028a99981119b8f0080021323253330243370e900000089981419bb037520146052604400400a200a604400264a666046a66604c00229445280a60103d87a800013374a9000198139ba60014bd70191998008008040011112999814001080089919980200218160019991191980080080291299981680089981719bb037520086ea000d2f5bded8c0264646464a66605c66ebccc084020009300103d8798000133032337606ea4020dd40038028a99981719b8f0080021323253330303370e900000089981a19bb03752014606a605c00400a200a605c00264a66605e66e1c005200014c103d87a800013374a9000198199ba80014bd7019b80007001133032337606ea4008dd4000998030030019bad302f003375c605a0046062004605e0026eb8c09c004dd69814000981500109981319bb037520046e98004cc01801800cdd598118019bae302100230250023023001375c60360026eacc070004c07800888c8c8cc004004008894ccc06c00452889919299980d19b89375a60100046644646464a66603e66e1d20020011480004dd69812180e801180e80099299980f19b8748008004530103d87a8000132323300100100222533302400114c103d87a800013232323253330253371e014004266e95200033029375000297ae0133006006003375a604c0066eb8c090008c0a0008c098004dd59811980e001180e00099198008008051129998108008a6103d87a800013232323253330223371e010004266e95200033026374c00297ae0133006006003375660460066eb8c084008c094008c08c004dd718058011bae300c00213300400400114a0603e0046eb0c074004c8cc004004008894ccc06800452f5c0264666444646600200200644a6660400022006264660446e9ccc088dd4803198111ba9375c603e002660446ea0dd69810000a5eb80cc00c00cc090008c088004dd7180c8009bab301a00133003003301e002301c0012301830193019001223300700223375e600a6024002004446600c004466ebcc010c044c014c0440040088c0540048c050c054004894ccc03ccdc80010008a6103d87980001533300f3371e0040022980103d87a800014c103d87b800022323300100100322533301300114bd70099192999809180280109980b00119802002000899802002000980b801180a8008a4c26cac64a66601866e1d20000011323232325333013301600213232498cc0240088c8c8cc0300048c8dd6980c0011bae30160013756602a0046eb8c04c004c02400c58dd5980a000980a001180900098050040a99980619b874800800454ccc03cc028020526161533300c3370e90020008a99980798050040a4c2c2c601400e600200e464a66601666e1d20000011323232325333012301500213232498cc0200088c8c8cc02c0048c8dd6980b8011bae3015001375660280046eb8c048004c02000c58dd598098009809801180880098048010a99980599b87480080044c8c8c8c8c8c8c8c94ccc058c0640084c8c8c8c9263300e0042323233011001232375a603a0046eb8c06c004dd5980d0011bae3018001300e0053300c006232323300f001232375a60360046eb8c064004dd5980c0011bae3016001300c007163756602e002602e004602a002602a0046eacc04c004c04c008c044004c02400858c02400488c8cc00400400c894ccc03c0045261323300300330130023003301100123253330093370e9000000899191919299980818098010991924c64a66601e66e1d20000011323253330143017002132498c94ccc048cdc3a400000226464a66602e60340042649318070008b180c00098080010a99980919b87480080044c8c8c8c8c8c94ccc06cc07800852616375a603800260380046eb4c068004c068008dd6980c00098080010b18080008b180a80098068018a99980799b874800800454ccc048c03400c5261616300d00230070031630110013011002300f001300700216300700123253330083370e900000089919299980698080010a4c2c6eb8c038004c01800854ccc020cdc3a400400226464a66601a60200042930b1bae300e0013006002163006001230053754002460066ea80055cd2ab9d5573caae7d5d02ba15745",
      "hash": "f0a8e4bbb7f1f75971a2c31b464b6013710ca6a6aba14cea41114362"
    }
  ],
  "definitions": {
    "ByteArray": {
      "dataType": "bytes"
    },
    "Int": {
      "dataType": "integer"
    },
    "Option$aiken/transaction/credential/Referenced$aiken/transaction/credential/Credential": {
      "title": "Optional",
      "anyOf": [
        {
          "title": "Some",
          "description": "An optional value.",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/aiken~1transaction~1credential~1Referenced$aiken~1transaction~1credential~1Credential"
            }
          ]
        },
        {
          "title": "None",
          "description": "Nothing.",
          "dataType": "constructor",
          "index": 1,
          "fields": []
        }
      ]
    },
    "aiken/dict/Dict$ByteArray_Int": {
      "title": "Dict",
      "description": "An opaque `Dict`. The type is opaque because the module maintains some\n invariant, namely: there's only one occurrence of a given key in the dictionary.\n\n Note that the `key` parameter is a phantom-type, and only present as a\n means of documentation. Keys can be any type, yet will need to comparable\n to use functions like `insert`.\n\n See for example:\n\n ```aiken\n pub type Value =\n   Dict<PolicyId, Dict<AssetName, Int>>\n ```",
      "dataType": "map",
      "keys": {
        "$ref": "#/definitions/ByteArray"
      },
      "values": {
        "$ref": "#/definitions/Int"
      }
    },
    "aiken/transaction/credential/Address": {
      "title": "Address",
      "description": "A Cardano `Address` typically holding one or two credential references.\n\n Note that legacy bootstrap addresses (a.k.a. 'Byron addresses') are\n completely excluded from Plutus contexts. Thus, from an on-chain\n perspective only exists addresses of type 00, 01, ..., 07 as detailed\n in [CIP-0019 :: Shelley Addresses](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0019/#shelley-addresses).",
      "anyOf": [
        {
          "title": "Address",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "payment_credential",
              "$ref": "#/definitions/aiken~1transaction~1credential~1Credential"
            },
            {
              "title": "stake_credential",
              "$ref": "#/definitions/Option$aiken~1transaction~1credential~1Referenced$aiken~1transaction~1credential~1Credential"
            }
          ]
        }
      ]
    },
    "aiken/transaction/credential/Credential": {
      "title": "Credential",
      "description": "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
      "anyOf": [
        {
          "title": "VerificationKeyCredential",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/ByteArray"
            }
          ]
        },
        {
          "title": "ScriptCredential",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "$ref": "#/definitions/ByteArray"
            }
          ]
        }
      ]
    },
    "aiken/transaction/credential/Referenced$aiken/transaction/credential/Credential": {
      "title": "Referenced",
      "description": "Represent a type of object that can be represented either inline (by hash)\n or via a reference (i.e. a pointer to an on-chain location).\n\n This is mainly use for capturing pointers to a stake credential\n registration certificate in the case of so-called pointer addresses.",
      "anyOf": [
        {
          "title": "Inline",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/aiken~1transaction~1credential~1Credential"
            }
          ]
        },
        {
          "title": "Pointer",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "title": "slot_number",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "transaction_index",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "certificate_index",
              "$ref": "#/definitions/Int"
            }
          ]
        }
      ]
    },
    "aiken/transaction/value/Value": {
      "title": "Value",
      "description": "A multi-asset output `Value`. Contains tokens indexed by [PolicyId](#PolicyId) and [AssetName](#AssetName).\n\n This type maintain some invariants by construction; in particular, a `Value` will never contain a\n zero quantity of a particular token.",
      "dataType": "map",
      "keys": {
        "$ref": "#/definitions/ByteArray"
      },
      "values": {
        "$ref": "#/definitions/aiken~1dict~1Dict$ByteArray_Int"
      }
    },
    "escrow/types/EscrowDatum": {
      "title": "EscrowDatum",
      "anyOf": [
        {
          "title": "Initiation",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "initiator",
              "$ref": "#/definitions/aiken~1transaction~1credential~1Address"
            },
            {
              "title": "initiator_assets",
              "$ref": "#/definitions/aiken~1transaction~1value~1Value"
            }
          ]
        },
        {
          "title": "ActiveEscrow",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "title": "initiator",
              "$ref": "#/definitions/aiken~1transaction~1credential~1Address"
            },
            {
              "title": "initiator_assets",
              "$ref": "#/definitions/aiken~1transaction~1value~1Value"
            },
            {
              "title": "recipient",
              "$ref": "#/definitions/aiken~1transaction~1credential~1Address"
            },
            {
              "title": "recipient_assets",
              "$ref": "#/definitions/aiken~1transaction~1value~1Value"
            }
          ]
        }
      ]
    },
    "escrow/types/EscrowRedeemer": {
      "title": "EscrowRedeemer",
      "anyOf": [
        {
          "title": "RecipientDeposit",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "recipient",
              "$ref": "#/definitions/aiken~1transaction~1credential~1Address"
            },
            {
              "title": "recipient_assets",
              "$ref": "#/definitions/aiken~1transaction~1value~1Value"
            }
          ]
        },
        {
          "title": "CancelTrade",
          "dataType": "constructor",
          "index": 1,
          "fields": []
        },
        {
          "title": "CompleteTrade",
          "dataType": "constructor",
          "index": 2,
          "fields": []
        }
      ]
    }
  }
}